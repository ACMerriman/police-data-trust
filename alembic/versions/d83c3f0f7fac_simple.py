"""simple

Revision ID: d83c3f0f7fac
Revises: 
Create Date: 2021-06-15 20:52:03.676714

"""
from alembic import op
import sqlalchemy as sa
import backend.database.models.types



# revision identifiers, used by Alembic.
revision = 'd83c3f0f7fac'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('incident',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('time_of_incident', sa.DateTime(), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incident_action',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('incident_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('action', sa.Text(), nullable=True),
    sa.Column('actor', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incident_description',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('incident_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('type', sa.Text(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incident_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('incident_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incident_use_of_force',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('incident_id', sa.Integer(), nullable=True),
    sa.Column('use_of_force_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incident_victim',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('incident_id', sa.Integer(), nullable=True),
    sa.Column('victim_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('officer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.Column('race', sa.Enum('UNKNOWN', 'WHITE', 'BLACK_AFRICAN_AMERICAN', 'AMERICAN_INDIAN_ALASKA_NATIVE', 'ASIAN', 'NATIVE_HAWAIIAN_PACIFIC_ISLANDER', name='race'), nullable=True),
    sa.Column('gender', sa.Enum('UNKNOWN', 'MALE', 'FEMALE', 'TRANSGENDER', name='gender'), nullable=True),
    sa.Column('appointed_date', sa.DateTime(), nullable=True),
    sa.Column('badge', sa.Text(), nullable=True),
    sa.Column('unit', sa.Text(), nullable=True),
    sa.Column('rank', sa.Text(), nullable=True),
    sa.Column('star', sa.Text(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('officer_at_incident',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result_of_stop',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('result', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('result_of_stop_at_incident',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('incident_id', sa.Integer(), nullable=True),
    sa.Column('result_of_stop_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='1', nullable=False),
    sa.Column('email', backend.database.models.users.CI_String(length=255, collation='NOCASE'), nullable=False),
    sa.Column('email_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('password', sa.String(length=255), server_default='', nullable=False),
    sa.Column('first_name', backend.database.models.users.CI_String(length=100, collation='NOCASE'), server_default='', nullable=False),
    sa.Column('last_name', backend.database.models.users.CI_String(length=100, collation='NOCASE'), server_default='', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('result_of_stop_at_incident')
    op.drop_table('result_of_stop')
    op.drop_table('officer_at_incident')
    op.drop_table('officer')
    op.drop_table('incident_victim')
    op.drop_table('incident_use_of_force')
    op.drop_table('incident_tag')
    op.drop_table('incident_description')
    op.drop_table('incident_action')
    op.drop_table('incident')
    # ### end Alembic commands ###
